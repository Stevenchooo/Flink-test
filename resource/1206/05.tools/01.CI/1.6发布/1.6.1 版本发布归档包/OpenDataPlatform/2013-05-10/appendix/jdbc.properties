#The fully qualified Java class name of the JDBC driver to be used.
jdbc.driverClassName=com.mysql.jdbc.Driver
#The connection URL to be passed to our JDBC driver to establish a connection.
  #  jdbc:mysql:       jdbc Mysql connection
  #  192.168.192.32    Mysql DB IP
  #  3306              Mysql DB port
  #  xxxdb             Mysql DB name of you will connect to
jdbc.url=jdbc:mysql://10.120.5.43:3306/odpdb
#username of connection Mysql DB
jdbc.username=odpdb
#password of connection Mysql DB
jdbc.password=BD44D5D2ABAAF4900674286647DDBEB0
#The default auto-commit state of connections created by this pool.
jdbc.defaultAutoCommit = true
#The default read-only state of connections created by this pool.
jdbc.defaultReadOnly = false
#The initial number of connections that are created when the pool is started.
jdbc.initialSize = 1
#The maximum number of active connections that can be allocated from this pool at the same time, or negative for no limit
jdbc.maxActive = 100
#The maximum number of connections that can remain idle in the pool, without extra ones being destroyed, or negative for no limit
jdbc.maxIdle = 10
#The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception, or <= 0 to wait indefinitely.
jdbc.maxWait = 10000
#The SQL query that will be used to validate connections from this pool before returning them to the caller
jdbc.validationQuery = select count(*) from dual
#The indication of whether objects will be validated by the idle object evictor (if any).
jdbc.testWhileIdle = true
#The number of milliseconds to sleep between runs of the idle object evictor thread.
jdbc.timeBetweenEvictionRunsMillis = 60000
#The minimum amount of time an object may sit idle in the pool before it is eligible for eviction by the idle object evictor (if any).
jdbc.minEvictableIdleTimeMillis = 60000
#Flag to remove abandoned connections if they exceed the removeAbandonedTimout
jdbc.removeAbandoned = true
#Timeout in seconds before an abandoned connection can be removed.
jdbc.removeAbandonedTimeout = 180
#Flag to log stack traces for application code which abandoned a Statement or Connection.
jdbc.logAbandoned = false
