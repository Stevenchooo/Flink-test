<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.platform.tcc.dao.taskrunningstate">
  <resultMap id="taskRSResultMap" type="TaskRunningStateEntity">
    <id column="Cycle_ID" jdbcType="VARCHAR" property="cycleId" />
    <id column="Task_ID" jdbcType="BIGINT" property="taskId" />
    <result column="State" jdbcType="SMALLINT" property="state" />
    <result column="Running_Start_Time" jdbcType="TIMESTAMP" property="runningStartTime" />
    <result column="Running_End_Time" jdbcType="TIMESTAMP" property="runningEndTime" />
    <result column="Begin_Depend_Task_List" jdbcType="VARCHAR" property="beginDependTaskList" />
    <result column="Finish_Depend_Task_List" jdbcType="VARCHAR" property="finishDependTaskList" />
  </resultMap>
  
  <select id="getMaxCycleID" parameterType="Long"
		resultType="String" statementType="PREPARED">
		select max(Cycle_ID) from tcc_task_running_state where task_Id = #{taskId,jdbcType=BIGINT}
	</select>
	
	
	  <select id="getTaskRunningState" parameterType="TaskRunningStateEntity"
		resultMap="taskRSResultMap" statementType="PREPARED">
		select * from tcc_task_running_state where task_Id = #{taskId,jdbcType=BIGINT} and Cycle_ID = #{cycleId,jdbcType=VARCHAR}
	</select>
	
	<select id="getTaskRunningStateCount" parameterType="TaskRunningStateEntity"
		resultType="Integer" statementType="PREPARED">
		select count(Cycle_ID) from tcc_task_running_state where (task_Id,cycle_Id,State) in 
		<foreach close=")" collection="list" item="taskRS" open="(" separator=",">
            (#{taskRS.taskId},#{taskRS.cycleId},#{taskRS.state})
        </foreach>
	</select>
	
	<select id="getTaskRunningStateExceptStateCount" parameterType="TaskRunningStateEntity"
		resultType="Integer" statementType="PREPARED">
		select count(Cycle_ID) from tcc_task_running_state where (task_Id,cycle_Id) in 
		<foreach close=")" collection="list" item="taskRS" open="(" separator=",">
            (#{taskRS.taskId},#{taskRS.cycleId})
        </foreach>
	</select>
	
	 <select id="isExistsTaskRS" parameterType="TaskRunningStateEntity"
		resultType="Integer" statementType="PREPARED">
		select count(Cycle_ID) from tcc_task_running_state where Cycle_ID = #{cycleId,jdbcType=VARCHAR} and Task_ID = #{taskId,jdbcType=BIGINT}
	</select>
	
	<select id="getCountTaskIDCycleID" parameterType="String"
		resultType="Integer" statementType="PREPARED">
		select count(task_Id) from tcc_task_running_state where (task_Id,cycle_Id) in #{taskIdCycleIds} 
	</select>
	
	<!--默认只取最老的前100个周期任务-->
	<!--状态为init：0或者start：1-->
	<select id="getNeedRunCycleTasks" resultMap="taskRSResultMap" parameterType="TaskCycleParam"
	    statementType="PREPARED">
		select * from tcc_task_running_state where State in (0,1) and cycle_Id >= #{minCycleId,jdbcType=VARCHAR}
		and  #{maxCycleId,jdbcType=VARCHAR} >= cycle_Id and task_Id = #{taskId,jdbcType=BIGINT} order by cycle_Id limit 100;
	</select>
	
		<!--状态为init：0或者start：1-->
	<select id="getTopOldNeedRunCycleTasks" resultMap="taskRSResultMap" parameterType="TaskCycleParam"
	    statementType="PREPARED">
		select * from tcc_task_running_state where State in (0,1) and cycle_Id >= #{minCycleId,jdbcType=VARCHAR}
		and  #{maxCycleId,jdbcType=VARCHAR} >= cycle_Id and task_Id = #{taskId,jdbcType=BIGINT} order by cycle_Id limit 1;
	</select>
	
	<insert id="addTaskRunningState" parameterType="TaskRunningStateEntity"
			statementType="PREPARED">
		insert tcc_task_running_state(Cycle_ID,Task_ID,State,Running_Start_Time,Running_End_Time,Begin_Depend_Task_List,Finish_Depend_Task_List)
		values(#{cycleId,jdbcType=VARCHAR},#{taskId,jdbcType=BIGINT},#{state,jdbcType=SMALLINT},
		       #{runningStartTime,jdbcType=TIMESTAMP},#{runningEndTime,jdbcType=TIMESTAMP},
		       #{beginDependTaskList,jdbcType=VARCHAR},#{finishDependTaskList,jdbcType=VARCHAR})
	</insert>
	
	<update id="updateTaskRunningState" parameterType="TaskRunningStateEntity"
			statementType="PREPARED">
		update tcc_task_running_state
		<set>
			<if test="state != null">
				State = #{state,jdbcType=SMALLINT},
			</if>
			<if test="runningStartTime != null">
				Running_Start_Time = #{runningStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="runningEndTime != null">
				Running_End_Time = #{runningEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="beginDependTaskList != null">
				Begin_Depend_Task_List = #{beginDependTaskList,jdbcType=VARCHAR},
			</if>
			<if test="finishDependTaskList != null">
				Finish_Depend_Task_List = #{finishDependTaskList,jdbcType=VARCHAR},
			</if>
		</set>
		where Cycle_ID = #{cycleId,jdbcType=VARCHAR} and Task_ID = #{taskId,jdbcType=BIGINT}
	</update>
  
  <update id="updateAppendDependTaskList" parameterType="TaskRunningStateEntity"
			statementType="PREPARED">
		update tcc_task_running_state
		<set>
			<if test="state != null">
				State = #{state,jdbcType=SMALLINT},
			</if>
			<if test="runningStartTime != null">
				Running_Start_Time = #{runningStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="runningEndTime != null">
				Running_End_Time = #{runningEndTime,jdbcType=TIMESTAMP},
			</if>
			<if test="beginDependTaskList != null">
				Begin_Depend_Task_List = CONCAT(Begin_Depend_Task_List,#{beginDependTaskList,jdbcType=VARCHAR}),
			</if>
			<if test="finishDependTaskList != null">
				Finish_Depend_Task_List = CONCAT(Finish_Depend_Task_List,#{finishDependTaskList,jdbcType=VARCHAR})
			</if>
		</set>
		where Cycle_ID = #{cycleId,jdbcType=VARCHAR} and Task_ID = #{taskId,jdbcType=BIGINT}
	</update>
</mapper>