版本变动内容：
TCC后台：
   增加了对“文件未达到”状态的支持，防止批任务周期在没有文件的情况下仍然正常运行完成，导致后期的依赖任务非正常运行，而且没有任何报错也很难定位。
TCC前台：
   主要修改了TCC\2012-3-16\ProblemTracking\TCC界面问题跟踪.docx中提到的问题以及其它易用方面的改进
注意：
remoteshell.jar包仍然不是最新的
本次版本仅提供全量包，请先在12环境上测试，然后再商用使用；

请使用mysql的root权限执行如下的SQL语句实现tccserverdb在2012-3-16版本的基础上升级：
   
alter table `tcc_task`  modify `Task_Name` varchar(128) NOT NULL UNIQUE;

alter table tcc_taskid_servial rename tcc_taskid_serial;
			 
drop PROCEDURE if exists p_tcc_getTaskserialno;
delimiter //
CREATE PROCEDURE p_tcc_getTaskserialno(IN serviceIDin int,IN taskTypein int, OUT taskserialno int)
BEGIN
	DECLARE defaule_serialno_value int(1) DEFAULT 0;
	DECLARE count INT;
	START TRANSACTION;
	select count(*) into count from tcc_taskid_serial where serviceID=serviceIDin and taskType=taskTypein FOR UPDATE;
	if(count = 0) then
		insert into tcc_taskid_serial (serviceID,taskType,serialNo) values (serviceIDin,taskTypein,defaule_serialno_value);
	end if;
	
	UPDATE tcc_taskid_serial SET serialNo = LAST_INSERT_ID(serialNo + 1) where serviceID=serviceIDin and taskType=taskTypein;
	SELECT LAST_INSERT_ID() into taskserialno;
	
	COMMIT;
END
//
delimiter ;

//
delimiter ;

SET GLOBAL log_bin_trust_function_creators=1;
drop FUNCTION if exists removeDependTaskId;
delimiter //
CREATE FUNCTION removeDependTaskId(dependTaskIdList TEXT,taskId BIGINT) RETURNS TEXT
BEGIN
  DECLARE removedDependTaskIdList TEXT;
  DECLARE startIndex INT;
  DECLARE taskIDStr TEXT;
  SET taskIDStr = CONCAT(CONCAT(';',taskId),',');
  SET removedDependTaskIdList = '';
  SET dependTaskIdList = CONCAT(';',dependTaskIdList);
  WHILE LENGTH(dependTaskIdList) > 0 DO
		SET startIndex = LOCATE(taskIDStr,dependTaskIdList);
		IF startindex != 0
		THEN	
			SET removedDependTaskIdList = CONCAT(removedDependTaskIdList,LEFT(dependTaskIdList,startIndex-1));
                        IF ',' = SUBSTRING(dependTaskIdList,startindex + LENGTH(taskIDStr)+3,1)
			THEN
				SET dependTaskIdList = SUBSTRING(dependTaskIdList,startindex + LENGTH(taskIDStr)+5);
			ELSE
				SET dependTaskIdList = SUBSTRING(dependTaskIdList,startindex + LENGTH(taskIDStr)+3);
                        END IF;
			
		ELSE
			SET removedDependTaskIdList = CONCAT(removedDependTaskIdList, dependTaskIdList);
			SET dependTaskIdList = '';
		END IF;
  END WHILE;
  IF LENGTH(removedDependTaskIdList) > 0
  THEN
		SET removedDependTaskIdList = SUBSTRING(removedDependTaskIdList,2);
  END IF;
  RETURN(removedDependTaskIdList);
END
//
delimiter ;
SET GLOBAL log_bin_trust_function_creators=0;