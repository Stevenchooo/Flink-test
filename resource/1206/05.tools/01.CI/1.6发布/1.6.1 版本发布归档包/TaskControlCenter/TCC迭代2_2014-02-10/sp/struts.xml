<?xml version="1.0" encoding="utf-8"?>
<!-- 指定Struts 2配置文件的DTD信息 -->
<!DOCTYPE struts PUBLIC
	"-//Apache Software Foundation//DTD Struts Configuration 2.1.7//EN"
	"http://struts.apache.org/dtds/struts-2.1.7.dtd">
<!-- Struts 2配置文件的根元素 -->
<struts>
	<!-- 国际化 -->
	<constant name="struts.custom.i18n.resources" value="internationalization" />
	<!-- 配置了系列常量struts.devMode,开启这个选项会使struts每次都重新加载初始化文件，配置文件 struts.objectFactory设置可以再class中直接使用spring的bean,method可以指定调用的方法 -->
	<constant name="struts.devMode" value="false" />
	<constant name="struts.objectFactory" value="spring" />
	<constant name="struts.enable.DynamicMethodInvocation" value="true" />
	
	<package name="default" namespace="/" extends="struts-default">
		<default-action-ref name="toDefault"  />
		<action name="toDefault" class="loginAction" method="toDefault">
			<result name="error">login.jsp</result>
			<result name="tosysadmin">SysAdminIndex.jsp</result>
			<result name="tooperator">index.jsp</result>
		</action>
	</package>

	
	<package name="taskControlCenter" namespace="/" extends="struts-default"> 
		<!--自定义异常拦截器 -->
		<interceptors>
			<interceptor name="exceptionManager"
				class="com.huawei.platform.tcc.utils.ExceptionInterceptor" />
			<interceptor-stack name="tccactioninter">
				<!--配置内建默认拦截器 -->
				<interceptor-ref name="exceptionManager" />
				<interceptor-ref name="exception" />
				<interceptor-ref name="alias" />
				<interceptor-ref name="servletConfig" />
				<interceptor-ref name="prepare" />
				<interceptor-ref name="i18n" />
				<interceptor-ref name="chain" />
				<interceptor-ref name="debugging" />
				<interceptor-ref name="profiling" />
				<interceptor-ref name="scopedModelDriven" />
				<interceptor-ref name="modelDriven" />
				<interceptor-ref name="fileUpload" />
				<interceptor-ref name="checkbox" />
				<interceptor-ref name="staticParams" />
				<interceptor-ref name="params">
					<param name="excludeParams">dojo\..*</param>
				</interceptor-ref>
				<interceptor-ref name="conversionError" />
				<interceptor-ref name="validation">
					<param name="excludeMethods">input,back,cancel,browse</param>
				</interceptor-ref>
				<interceptor-ref name="workflow">
					<param name="excludeMethods">input,back,cancel,browse</param>
				</interceptor-ref>
			</interceptor-stack>
		</interceptors>
		
		<!--修改默认的拦截器stack，原来是defaultStack -->
		<default-interceptor-ref name="tccactioninter" />
		<global-results>
			<result name="error">/TccPortalError.jsp</result>
			<result name="login">/login.jsp</result>
		</global-results>
		<global-exception-mappings>
			<exception-mapping result="error" exception="java.lang.Exception">
			</exception-mapping>
		</global-exception-mappings>
		
		<!-- TCC任务表开始 -->
		<action name="prepareLoadTasks" class="loadTasksAction" method="prepareLoadTasks">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="loadTasks" class="loadTasksAction" method="loadTasks">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="getAllTccServers" class="tccTaskAction" method="getAllTccServers">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="syncTcc" class="tccTaskAction" method="syncTcc">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqTaskInstanceDigraph" class="taskInstanceDGAction" method="reqTaskInstanceDigraph">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqTaskDigraph" class="taskDGAction" method="reqTaskDigraph">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqNodes" class="nodeManageAction" method="reqNodes">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqNodeInfos" class="nodeManageAction" method="reqNodeInfos">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="deleteNode" class="nodeManageAction" method="deleteNode">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="saveNode" class="nodeManageAction" method="saveNode">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="saveTccTask" class="tccTaskAction" method="saveTccTask">
			<result name="success" type="stream">
				<param name="contentType">text/html</param>
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="isSystemAdmin" class="tccTaskAction" method="isSystemAdmin">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqDataGridJsonObject" class="tccTaskAction"
			method="reqDataGridJsonObject">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqChoosedTaskList" class="tccTaskAction" method="reqChoosedTaskList">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqTaskIdJsonObject" class="tccTaskAction"
			method="reqTaskIdJsonObject">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>


		<action name="reqTaskIdNames" class="tccTaskAction" method="reqTaskIdNames">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="batchRedoTasks" class="tccTaskAction" method="batchRedoTasks">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>


		<action name="changeTaskState" class="tccTaskAction" method="changeTaskState">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		<action name="deleteTask" class="tccTaskAction" method="deleteTask">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getStepEnableCount" class="tccTaskAction" method="getStepEnableCount">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getVServiceIdNameList" class="tccTaskAction"
			method="getVServiceIdNameList">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="getAllServiceIdNames" class="tccTaskAction"
			method="getAllServiceIdNames">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- TCC任务步骤开始 -->
		<action name="saveTccStep" class="taskStepAction" method="saveTccStep">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getTccStepList" class="taskStepAction" method="reqDataGridJsonObject">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="changeStepState" class="taskStepAction" method="changeStepState">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteTaskStep" class="taskStepAction" method="deleteTaskStep">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="exchangeTaskStep" class="taskStepAction" method="exchangeTaskStep">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="queryLongShells" class="longShellQueryAction"
			method="queryLongShells">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqCycleIdJsonObject" class="taskRunningDetailAction"
			method="reqCycleIdJsonObject">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabCycleOffsetLeftTime" class="taskRunningDetailAction"
			method="grabCycleOffsetLeftTime">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getLogMsgs" class="taskRunningDetailAction"
			method="getLogMsgs">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getLogsCount" class="taskRunningDetailAction"
			method="getLogsCount">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="queryRSList2Json" class="taskRunningDetailAction"
			method="queryRSList2Json">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
	   <action name="jobIds2Json" class="taskRunningDetailAction"
			method="jobIds2Json">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="queryTaskRSList2Json" class="taskRunningStateQueryAction"
			method="queryTaskRSList2Json">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getChoosedTaskRSList2Json" class="taskRunningStateQueryAction"
			method="getChoosedTaskRSList2Json">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="redoAll" class="taskRunningStateQueryAction"
			method="redoAll">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabCanIntegratedTaskInfos" class="taskRunningStateQueryAction"
			method="grabCanIntegratedTaskInfos">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="integratedRedo" class="taskRunningStateQueryAction"
			method="integratedRedo">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabNormalTaskIds" class="taskRunningStateQueryAction"
			method="grabNormalTaskIds">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabTaskDependedIds" class="taskRunningStateQueryAction"
			method="grabTaskDependedIds">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="redoTaskCycle" class="taskRunningStateQueryAction"
			method="redoTaskCycle">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- TCC任务步骤结束 -->
		<action name="getDependTaskTree" class="dependTaskTreeAction"
			method="getDependTaskTree">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getDependReverseTree" class="dependTaskTreeAction"
			method="getDependReverseTree">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabTreeNodeCount" class="dependTaskTreeAction"
			method="grabTreeNodeCount">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabTaskName" class="tccTaskAction" method="grabTaskName">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="grabTaskIdNames" class="tccTaskAction" method="grabTaskIdNames">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabMaxWeightHisRSCountState" class="tccTaskAction"
			method="grabMaxWeightHisRSCountState">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getLogMsg" class="taskRunningDetailAction"
			method="getLogMsg">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabJobDetailUrl" class="taskRunningDetailAction"
			method="grabJobDetailUrl">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqUserNameJsonObject" class="log2DBQueryAction"
			method="reqUserNameJsonObject">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="queryLogsCount" class="log2DBQueryAction" method="queryLogsCount">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="queryLogs" class="log2DBQueryAction" method="queryLogs">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveTccConfig" class="tccConfigAction" method="saveTccConfig">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="loadTccConfig" class="tccConfigAction" method="loadTccConfig">
			<result name="success">TccConfig.jsp</result>
		</action>

		<action name="rebootTcc" class="tccConfigAction" method="rebootTcc">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqRsRunningQueueJson" class="taskCycleQueueAction"
			method="reqRsRunningQueueJson">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqRsWaittingQueueJson" class="taskCycleQueueAction"
			method="reqRsWaittingQueueJson">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="userLogin" class="loginAction" method="userLogin">
			<result name="error">login.jsp</result>
			<result name="tosysadmin">SysAdminIndex.jsp</result>
			<result name="tooperator">index.jsp</result>
		</action>
		
		<action name="isSessionValid" class="loginAction" method="isSessionValid">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="foundFatalProblem" class="loginAction" method="foundFatalProblem">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqServiceNames" class="serviceManageAction"
			method="reqServiceNames">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqServices" class="serviceManageAction" method="reqServices">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveService" class="serviceManageAction" method="saveService">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteService" class="serviceManageAction"
			method="deleteService">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="grabServiceName" class="serviceManageAction"
			method="grabServiceName">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<!-- add by lixuezhi begin -->
		<action name="reqUsers" class="userManageAction" method="reqUsers">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqUserNameList" class="userManageAction" method="reqUserNameList">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveUser" class="userManageAction" method="saveUser">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteUser" class="userManageAction" method="deleteUser">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqRoleIds" class="roleManageAction" method="reqRoleIds">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqRoles" class="roleManageAction" method="reqRoles">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveRole" class="roleManageAction" method="saveRole">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteRole" class="roleManageAction" method="deleteRole">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getUsersNoOsUser" class="roleManageAction"
			method="getUsersNoOsUser">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveUserRoleId" class="roleManageAction" method="saveUserRoleId">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="logout" class="loginAction" method="logout">
			<result name="success">login.jsp</result>
		</action>

		<action name="getUserInfoByName" class="userManageAction"
			method="getUserInfoByName">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="getUserNameFromSession" class="loginAction"
			method="getUserNameFromSession">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="modifyPwd" class="userManageAction" method="modifyPwd">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="reqOSGroupNames" class="oSGroupManageAction" method="reqOSGroupNames">
		   <result name="success" type="stream">
		   		<param name="inputName">inputStream</param>
		   </result>
		</action>
		
		<action name="saveOSGroup" class="oSGroupManageAction" method="saveOSGroup">
		   <result name="success" type="stream">
		   		<param name="inputName">inputStream</param>
		   </result>
		</action>
		
		<action name="deleteOSGroup" class="oSGroupManageAction" method="deleteOSGroup">
		   <result name="success" type="stream">
		   		<param name="inputName">inputStream</param>
		   </result>
		</action>
		
		
		<action name="reqOSGroups" class="oSGroupManageAction" method="reqOSGroups">
		   <result name="success" type="stream">
		   		<param name="inputName">inputStream</param>
		   </result>
		</action>

		<action name="reqOSUsers" class="oSUserManageAction" method="reqOSUsers">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="getOptOSUsers" class="oSUserManageAction"	method="getOptOSUsers">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		
		<action name="getVisibleOsUsers" class="oSUserManageAction"	method="getVisibleOsUsers">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveOSUser" class="oSUserManageAction" method="saveOSUser">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteOSUser" class="oSUserManageAction" method="deleteOSUser">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqOSUserNames" class="oSUserManageAction"
			method="reqOSUserNames">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqOperators" class="userManageAction" method="reqOperators">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqOperationRecords" class="operationRecordAction"
			method="reqOperationRecords">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqAlarmFacts" class="alarmManageAction" method="reqAlarmFacts">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveAlarmHandle" class="alarmManageAction"
			method="saveAlarmHandle">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="reqAlarmConfig" class="alarmManageAction" method="reqAlarmConfig">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="saveAlarmConfig" class="alarmManageAction"
			method="saveAlarmConfig">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>

		<action name="deleteOldOperationRecord" class="operationRecordAction"
			method="deleteOldOperationRecord">
			<result name="success" type="stream">
				<param name="inputName">inputStream</param>
			</result>
		</action>
		<!-- add by lixuezhi end -->

	</package>
</struts>
