<!--
[201705][点播VOD、直播livetv]

本报文结算结果为
projectid@110#activitychannelid@119#contentid@120#dtime@20170510#
projectid@110#activitychannelid@119#dtime@20170510#
projectid@110#contentid@120#dtime@20170510#
projectid@110#dtime@20170510#
注意：
VOD:    contentid
LiveTV: logicalchannelid
结算表字段名称变化

[20170309@SE]初步设定视频周期为三天 即观看时间记录不会超过48小时
故设计检索原表 设置时长为 7+3=10天
-->
<reportIndexGroup>
    <multiHqlReportIndexs>

	<!--
	*********************************************************************************************
	//点播VOD
	//近日指标
	*********************************************************************************************
	-->
		<!--  当期 点播某vod总次数 vodtimes -->
		<!--  当期 点播vod内容数量 videosnumber -->
		<!--  当期 点播某vod总用户数 vodusers -->
		<!--  当期 点播某vod总时长 vodtime -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.vod.vodplay.d</indexKey>
			<macroList>
				<macro>
					<name>VOD_DATE_DAY</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,
						   if(t1.startdate = t2.dtime,unix_timestamp(t1.starttime, 'yyyyMMddHHmmss'),unix_timestamp(t1.startdate, 'yyyyMMdd')) starttime,
						   if(t1.enddate > t2.dtime,unix_timestamp(date_add(formaltime, 1), 'yyyy-MM-dd'),unix_timestamp(t1.endtime, 'yyyyMMddHHmmss')) endtime,
						   t1.subscriberid,
						   t1.startdate,
						   t2.dtime
					  from (select projectid,activitychannelid,contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 8) enddate
							  from video.t_cdr_vod_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),3),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.startdate < t2.dtime AND substr(t1.endtime, 0, 8) >= t2.dtime)
						or t1.startdate = t2.dtime
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>videosnumber,vodtimes,vodusers,vodtime</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,videosnumber,vodtimes,vodusers,vodtime
				  from (
					  select projectid,activitychannelid,contentid,dtime,
							 'none' videosnumber,
							 count(subscriberid) vodtimes,
							 count(distinct(subscriberid)) vodusers,
							 sum(endtime - starttime) vodtime
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,starttime,endtime,
									 subscriberid
								from ({VOD_DATE_DAY}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,starttime,endtime,
									 subscriberid
								from ({VOD_DATE_DAY}) t) tt
					   group by projectid, activitychannelid, contentid, dtime
				union all
				select projectid,activitychannelid,contentid,dtime,videosnumber,vodtimes,vodusers,vodtime from(
					  select projectid,activitychannelid,dtime,
							 count(distinct(contentid)) videosnumber,
							 count(subscriberid) vodtimes,
							 count(distinct(subscriberid)) vodusers,
							 sum(endtime - starttime) vodtime
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,starttime,endtime,
									 subscriberid
								from ({VOD_DATE_DAY}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,starttime,endtime,
									 subscriberid
								from ({VOD_DATE_DAY}) t) tt
					   group by projectid, activitychannelid, contentid, dtime)s
			)tb
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 VOD人均播放时长=播放时长 vodtime/ 播放用户数 vodusers  vodpercapitatime -->
		<!--  当期 VOD人均播放次数=播放次数 vodtimes / 播放用户数 vodusers vodpercapitaplay -->
		<!--  当期 VOD次均播放时长=播放时长 vodtime/播放次数 vodtimes avgvodtime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.vod.vodavg.d</indexKey>
			<fieldName>vodpercapitatime,vodpercapitaplay,avgvodtime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (vodtime / vodusers) vodpercapitatime,
					   (vodtimes / vodusers) vodpercapitaplay,
					   (vodtime / vodtimes) avgvodtime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(vodtime is null, 0, vodtime) vodtime,
							   if(vodtimes is null, 0, vodtimes) vodtimes,
							   if(vodusers is null, 0, vodusers) vodusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (vodtime / vodusers),
						  (vodtimes / vodusers),
						  (vodtime / vodtimes)
				]]>
			</hql>
		</multiHqlReportIndex>

	<!--
	*********************************************************************************************
	//点播VOD
	//当周指标
	*********************************************************************************************
	-->
		<!--  当期 点播vod内容数量 wvideosnumber -->
		<!--  当期 点播某vod总用户数 wvodusers -->
		<!--  当期 点播某vod总次数 wvodtimes -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.vod.vodplay.dw</indexKey>
			<macroList>
				<macro>
					<name>VOD_DATE_WEEK</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,t1.subscriberid,t2.dtime
					  from (select projectid,activitychannelid,contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 8) enddate
							  from video.t_cdr_vod_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),10),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,t.weekdays,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.startdate > 	from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
						AND t1.startdate <= t2.dtime)
						or (t1.startdate <=	from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
						AND t1.enddate	 > from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd'))
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>wvideosnumber,wvodusers,wvodtimes</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,wvideosnumber,wvodusers,wvodtimes
				  from (
					  select projectid,activitychannelid,contentid,dtime,
							 'none' wvideosnumber,
							 count(subscriberid) vodtimes,
							 count(distinct(subscriberid)) wvodusers,
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_WEEK}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_WEEK}) t) tt
					   group by projectid, activitychannelid, contentid, dtime
				union all
				select projectid,activitychannelid,'ALL' contentid,dtime,wvideosnumber,wvodusers,wvodtimes 
				from (select projectid,activitychannelid,dtime,
							 count(distinct(contentid)) wvideosnumber,
							 count(distinct(subscriberid)) wvodusers,
							 count(subscriberid) wvodtimes
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_WEEK}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_WEEK}) t) tt
					   group by projectid, activitychannelid, contentid, dtime)s
				)tb
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 点播某vod总时长 wvodtime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.vod.vodtime.dw</indexKey>
			<fieldName>wvodtime</fieldName>
			<hql>
				<![CDATA[
                 select projectid,activitychannelid,contentid,dtime,
						sum(vodtime) wvodtime
				  from (select t1.projectid,
							   if(t1.activitychannelid is null, 'ALL', t1.activitychannelid) activitychannelid,
							   if(t1.contentid is null, 'ALL', t1.contentid) contentid,
							   t2.dtime,
							   if(t1.vodtime is null,0,t1.vodtime) vodtime
						  from video.t_video_hvs_current_d_hbase t1,
							   (select t.dtime,t.weekdays,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
								  from video.t_bdi_muchtv_video_rundate t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}')t2
                          where t1.dtime > 	from_unixtime(unix_timestamp(date_sub(formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
							and t1.dtime < 	from_unixtime(unix_timestamp(date_add(formaltime,1),'yyyy-MM-dd'), 'yyyyMMdd')
					)tt
				group by projectid,activitychannelid,contentid,dtime
				]]>
			</hql>
		</multiHqlReportIndex>
		
		<!--  当期 VOD人均播放时长=播放时长 vodtime/ 播放用户数 vodusers  wvodpercapitatime -->
		<!--  当期 VOD人均播放次数=播放次数 vodtimes / 播放用户数 vodusers wvodpercapitaplay -->
		<!--  当期 VOD次均播放时长=播放时长 vodtime/播放次数 vodtimes wavgvodtime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.vod.vodavg.dw</indexKey>
			<fieldName>wvodpercapitatime,wvodpercapitaplay,wavgvodtime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (wvodtime / wvodusers) wvodpercapitatime,
					   (wvodtimes / wvodusers) wvodpercapitaplay,
					   (wvodtime / wvodtimes) wavgvodtime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(wvodtime is null, 0, wvodtime) vodtime,
							   if(wvodtimes is null, 0, wvodtimes) vodtimes,
							   if(wvodusers is null, 0, wvodusers) vodusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (wvodtime / wvodusers),
						  (wvodtimes / wvodusers),
						  (wvodtime / wvodtimes)
				]]>
			</hql>
		</multiHqlReportIndex>

	<!--
	*********************************************************************************************
	//点播VOD
	//当月指标
	*********************************************************************************************
	-->
		<!--  当期 点播vod内容数量 mvideosnumber -->
		<!--  当期 点播某vod总次数 mvodtimes -->
		<!--  当期 点播某vod总用户数 mvodusers -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.vod.vodplay.dm</indexKey>
			<macroList>
				<macro>
					<name>VOD_DATE_MONTH</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,t1.subscriberid,t2.dtime
					  from (select projectid,activitychannelid,contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 6) menddate
							  from video.t_cdr_vod_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),34),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,t.weekdays,substr(t.dtime, 0, 6) mformaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.menddate = t2.mformaltime AND t1.startdate <= t2.dtime)
						or (t1.menddate < t2.mformaltime AND t1.menddate >= t2.mformaltime)
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>mvideosnumber,mvodtimes,mvodusers</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,mvideosnumber,mvodtimes,mvodusers
				  from (
					  select projectid,activitychannelid,contentid,dtime,
							 'none' mvideosnumber,
							 count(subscriberid) mvodtimes,
							 count(distinct(subscriberid)) mvodusers,
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_MONTH}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_MONTH}) t) tt
					   group by projectid, activitychannelid, contentid, dtime
				union all
				select projectid,activitychannelid,'ALL' contentid,dtime,wvideosnumber,wvodusers,wvodtimes 
				from (select projectid,activitychannelid,dtime,
							 count(distinct(contentid)) wvideosnumber,
							 count(distinct(subscriberid)) wvodusers,
							 count(subscriberid) wvodtimes
						from (select projectid,
									 'ALL' activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_MONTH}) t
							  union all
							  select projectid,
									 if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
									 if(t.contentid is null, 'none', t.contentid) contentid,
									 dtime,
									 subscriberid
								from ({VOD_DATE_MONTH}) t) tt
					   group by projectid, activitychannelid, contentid, dtime)s
			)tb
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 点播某vod总时长 vodtime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.vod.vodtime.dm</indexKey>
			<fieldName>mvodtime</fieldName>
			<hql>
				<![CDATA[
                 select projectid,activitychannelid,contentid,dtime,
						sum(vodtime) mvodtime
				  from (select t1.projectid,
							   if(t1.activitychannelid is null, 'ALL', t1.activitychannelid) activitychannelid,
							   if(t1.contentid is null, 'ALL', t1.contentid) contentid,
							   t2.dtime dtime,
							   if(t1.vodtime is null,0,t1.vodtime) vodtime
						  from video.t_video_hvs_current_d_hbase t1,
							   (select t.dtime
								  from video.t_bdi_muchtv_video_rundate t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}')t2
                          where substr(t1.dtime,0,6) = substr(t2.dtime,0,6) and t1.dtime <= t2.dtime
					)tt
				group by projectid,activitychannelid,contentid,dtime
				]]>
			</hql>
		</multiHqlReportIndex>
		
		<!--  当期 VOD人均播放时长=播放时长 vodtime/ 播放用户数 vodusers  mvodpercapitatime -->
		<!--  当期 VOD人均播放次数=播放次数 vodtimes / 播放用户数 vodusers mvodpercapitaplay -->
		<!--  当期 VOD次均播放时长=播放时长 vodtime/播放次数 vodtimes mavgvodtime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.vod.vodavg.dm</indexKey>
			<fieldName>mvodpercapitatime,mvodpercapitaplay,mavgvodtime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (mvodtime / mvodusers) mvodpercapitatime,
					   (mvodtimes / mvodusers) mvodpercapitaplay,
					   (mvodtime / mvodtimes) mavgvodtime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(mvodtime is null, 0, mvodtime) vodtime,
							   if(mvodtimes is null, 0, mvodtimes) vodtimes,
							   if(mvodusers is null, 0, mvodusers) vodusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (mvodtime / mvodusers),
						  (mvodtimes / mvodusers),
						  (mvodtime / mvodtimes)
				]]>
			</hql>
		</multiHqlReportIndex>

	<!--
	*********************************************************************************************
	//直播LiveTV
	//近日指标
	*********************************************************************************************
	-->
		<!--  当期 点播某live总次数 livetimes -->
		<!--  当期 点播某live总用户数 liveusers -->
		<!--  当期 点播某live总时长 livetime -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.live.liveplay.d</indexKey>
			<macroList>
				<macro>
					<name>LIVETV_DATE_DAY</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,
						   if(t1.startdate = t2.dtime,unix_timestamp(t1.starttime, 'yyyyMMddHHmmss'),unix_timestamp(t1.startdate, 'yyyyMMdd')) starttime,
						   if(t1.enddate > t2.dtime,unix_timestamp(date_add(formaltime, 1), 'yyyy-MM-dd'),unix_timestamp(t1.endtime, 'yyyyMMddHHmmss')) endtime,
						   t1.subscriberid,
						   t1.startdate,
						   t2.dtime
					  from (select projectid,activitychannelid,t.logicalchannelid contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 8) enddate
							  from video.t_cdr_livetv_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),3),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.startdate < t2.dtime AND substr(t1.endtime, 0, 8) >= t2.dtime)
						or t1.startdate = t2.dtime
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>livetimes,liveusers,livetime</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   count(subscriberid) livetimes,
					   count(distinct(subscriberid)) liveusers,
					   sum(endtime - starttime) livetime
				  from (select projectid,
							   'ALL' activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   starttime,
							   endtime,
							   subscriberid
						  from ({LIVETV_DATE_DAY}) t
						union all
						select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   starttime,
							   endtime,
							   subscriberid
						  from ({LIVETV_DATE_DAY}) t
						union all
						select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   'ALL' contentid,
							   dtime,
							   starttime,
							   endtime,
							   subscriberid
						  from ({LIVETV_DATE_DAY}) t
						union all
						select projectid,
							   'ALL' activitychannelid,
							   'ALL' contentid,
							   dtime,
							   starttime,
							   endtime,
							   subscriberid
						  from ({LIVETV_DATE_DAY}) t
					) tt
				 group by projectid, activitychannelid, contentid, dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 LiveTV人均播放时长=播放时长 livetime/ 播放用户数 liveusers  livepercapitatime -->
		<!--  当期 LiveTV人均播放次数=播放次数 livetimes / 播放用户数 liveusers livepercapitaplay -->
		<!--  当期 LiveTV次均播放时长=播放时长 livetime/播放次数 livetimes avglivetime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.livetvavg.d</indexKey>
			<fieldName>livepercapitatime,livepercapitaplay,avglivetime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (livetime / liveusers) livepercapitatime,
					   (livetimes / liveusers) livepercapitaplay,
					   (livetime / livetimes) avglivetime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(livetime is null, 0, livetime) livetime,
							   if(livetimes is null, 0, livetimes) livetimes,
							   if(liveusers is null, 0, liveusers) liveusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (livetime / liveusers),
						  (livetimes / liveusers),
						  (livetime / livetimes)
				]]>
			</hql>
		</multiHqlReportIndex>

	<!--
	*********************************************************************************************
	//直播LiveTV
	//当周指标
	*********************************************************************************************
	-->
		<!--  当期 点播某live总用户数 wliveusers -->
		<!--  当期 点播某live总次数 wlivetimes -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.live.liveplay.dw</indexKey>
			<macroList>
				<macro>
					<name>LIVETV_DATE_WEEK</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,t1.subscriberid,t2.dtime
					  from (select projectid,activitychannelid,t.logicalchannelid contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 8) enddate
							  from video.t_cdr_livetv_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),10),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,t.weekdays,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.startdate > 	from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
						AND t1.startdate <= t2.dtime)
						or (t1.startdate <=	from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
						AND t1.enddate	 > from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd'))
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>wliveusers,wlivetimes</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   count(subscriberid) wlivetimes,
					   count(distinct(subscriberid)) wliveusers,
				  from (select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_WEEK}) t
						union all
						select projectid,
							   'ALL' activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_WEEK}) t
						union all
						select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   'ALL' contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_WEEK}) t
						union all
						select projectid,
							   'ALL' activitychannelid,
							   'ALL' contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_WEEK}) t
					) tt
				 group by projectid, activitychannelid, contentid, dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 点播某live总时长 wlivetime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.livetime.dw</indexKey>
			<fieldName>wlivetime</fieldName>
			<hql>
				<![CDATA[
                 select projectid,activitychannelid,contentid,dtime,
						sum(livetime) wlivetime
				  from (select t1.projectid,
							   if(t1.activitychannelid is null, 'ALL', t1.activitychannelid) activitychannelid,
							   if(t1.contentid is null, 'ALL', t1.contentid) contentid,
							   t2.dtime,
							   if(t1.livetime is null,0,t1.livetime) livetime
						  from video.t_video_hvs_current_d_hbase t1,
							   (select t.dtime,t.weekdays,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
								  from video.t_bdi_muchtv_video_rundate t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}')t2
                          where t1.dtime > 	from_unixtime(unix_timestamp(date_sub(formaltime,t2.weekdays),'yyyy-MM-dd'), 'yyyyMMdd')
							and t1.dtime < 	from_unixtime(unix_timestamp(date_add(formaltime,1),'yyyy-MM-dd'), 'yyyyMMdd')
					)tt
				group by projectid,activitychannelid,contentid,dtime
				]]>
			</hql>
		</multiHqlReportIndex>
		
		<!--  当期 LiveTV人均播放时长=播放时长 livetime/ 播放用户数 liveusers  wlivepercapitatime -->
		<!--  当期 LiveTV人均播放次数=播放次数 livetimes / 播放用户数 liveusers wlivepercapitaplay -->
		<!--  当期 LiveTV次均播放时长=播放时长 livetime/播放次数 livetimes wavglivetime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.livetvavg.dw</indexKey>
			<fieldName>wlivepercapitatime,wlivepercapitaplay,wavglivetime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (wlivetime / wliveusers) wlivepercapitatime,
					   (wlivetimes / wliveusers) wlivepercapitaplay,
					   (wlivetime / wlivetimes) wavglivetime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(wlivetime is null, 0, wlivetime) livetime,
							   if(wlivetimes is null, 0, wlivetimes) livetimes,
							   if(wliveusers is null, 0, wliveusers) liveusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (wlivetime / wliveusers),
						  (wlivetimes / wliveusers),
						  (wlivetime / wlivetimes)
				]]>
			</hql>
		</multiHqlReportIndex>
		
	<!--
	*********************************************************************************************
	//直播LiveTV
	//当月指标
	*********************************************************************************************
	-->
		<!--  当期 点播某live总次数 mlivetimes -->
		<!--  当期 点播某live总用户数 mliveusers -->
        <multiHqlReportIndex>
            <indexKey>video.hvs.current.live.liveplay.dm</indexKey>
			<macroList>
				<macro>
					<name>LIVETV_DATE_MONTH</name>
					<value>
					<![CDATA[
					select t1.projectid,t1.activitychannelid,t1.contentid,t1.subscriberid,t2.dtime
					  from (select projectid,activitychannelid,t.logicalchannelid contentid,starttime,endtime,subscriberid,t.date startdate,substr(t.endtime, 0, 6) menddate
							  from video.t_cdr_livetv_watch_event t
							 where t.date >= from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
											'yyyyMMdd'),'yyyy-MM-dd'),34),'yyyy-MM-dd'),'yyyyMMddHHmmss')
							   and t.date < '{ENDTIME}') t1,
						   (select t.dtime,t.weekdays,substr(t.dtime, 0, 6) mformaltime
							  from video.t_bdi_muchtv_video_rundate t
							 where t.dtime > '{STARTTIME}'
							   and t.dtime < '{ENDTIME}') t2
					 where (t1.menddate = t2.mformaltime AND t1.startdate <= t2.dtime)
						or (t1.menddate < t2.mformaltime AND t1.menddate >= t2.mformaltime)
					]]>
					</value>
				</macro>
			</macroList>
            <fieldName>mlivetimes,mliveusers</fieldName>
            <hql>
                <![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   count(subscriberid) mlivetimes,
					   count(distinct(subscriberid)) mliveusers,
				  from (select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_MONTH}) t
						union all
						select projectid,
							   'ALL' activitychannelid,
							   if(t.contentid is null, 'none', t.contentid) contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_MONTH}) t
						union all
						select projectid,
							   if(t.activitychannelid is null, 'none', t.activitychannelid) activitychannelid,
							   'ALL' contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_MONTH}) t
						union all
						select projectid,
							   'ALL' activitychannelid,
							   'ALL' contentid,
							   dtime,
							   subscriberid
						  from ({LIVETV_DATE_MONTH}) t
					) tt
				 group by projectid, activitychannelid, contentid, dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--  当期 点播某live总时长 livetime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.livetime.dm</indexKey>
			<fieldName>mlivetime</fieldName>
			<hql>
				<![CDATA[
                 select projectid,activitychannelid,contentid,dtime,
						sum(livetime) mlivetime
				  from (select t1.projectid,
							   if(t1.activitychannelid is null, 'ALL', t1.activitychannelid) activitychannelid,
							   if(t1.contentid is null, 'ALL', t1.contentid) contentid,
							   t2.dtime dtime,
							   if(t1.livetime is null,0,t1.livetime) livetime
						  from video.t_video_hvs_current_d_hbase t1,
							   (select t.dtime
								  from video.t_bdi_muchtv_video_rundate t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}')t2
                          where substr(t1.dtime,0,6) = substr(t2.dtime,0,6) and t1.dtime <= t2.dtime
					)tt
				group by projectid,activitychannelid,contentid,dtime
				]]>
			</hql>
		</multiHqlReportIndex>
		
		<!--  当期 LiveTV人均播放时长=播放时长 livetime/ 播放用户数 liveusers  mlivepercapitatime -->
		<!--  当期 LiveTV人均播放次数=播放次数 livetimes / 播放用户数 liveusers mlivepercapitaplay -->
		<!--  当期 LiveTV次均播放时长=播放时长 livetime/播放次数 livetimes mavglivetime -->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.livetvavg.dm</indexKey>
			<fieldName>mlivepercapitatime,mlivepercapitaplay,mavglivetime</fieldName>
			<hql>
				<![CDATA[
				select projectid,activitychannelid,contentid,dtime,
					   (mlivetime / mliveusers) mlivepercapitatime,
					   (mlivetimes / mliveusers) mlivepercapitaplay,
					   (mlivetime / mlivetimes) mavglivetime
				  from (select projectid,
							   if(activitychannelid is null, 'ALL', activitychannelid) activitychannelid,
							   if(contentid is null, 'ALL', contentid) contentid,
							   dtime,
							   if(mlivetime is null, 0, mlivetime) livetime,
							   if(mlivetimes is null, 0, mlivetimes) livetimes,
							   if(mliveusers is null, 0, mliveusers) liveusers
						  from video.t_video_hvs_current_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,activitychannelid,contentid,dtime,
						  (mlivetime / mliveusers),
						  (mlivetimes / mliveusers),
						  (mlivetime / mlivetimes)
				]]>
			</hql>
		</multiHqlReportIndex>

		<!-- 
		*********************************************************************************************
		//当期 内容 的名称 contentName 
		//
		//对于VOD指的是观看内容 contentid，对于LiveTV指的是相应的逻辑频道 logicalchannelid
		*********************************************************************************************
		-->
		<multiHqlReportIndex>
			<indexKey>video.hvs.current.live.contentname.dm</indexKey>
			<fieldName>contentname</fieldName>
			<hql>
				<![CDATA[
				select projectid, activitychannelid, contentid, dtime, contentname
				  from (select t1.projectid,
							   if(t1.activitychannelid is null, 'ALL', t1.activitychannelid) activitychannelid,
							   t1.contentid,
							   t1.dtime,
							   if(t2.contentname is null, t1.contentid, t2.contentname) contentname
						  from (select projectid, activitychannelid, contentid, dtime
								  from video.t_video_hvs_current_d_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}'
								   and t.contentid is null) t1
						  left join (select code, name contentname
									  from video.t_cdr_dic_content_manage t) t2
							on t1.contentid = t2.code) tt
				 group by projectid, activitychannelid, contentid, dtime, contentname
				]]>
			</hql>
		</multiHqlReportIndex>
		
    </multiHqlReportIndexs>
</reportIndexGroup>
