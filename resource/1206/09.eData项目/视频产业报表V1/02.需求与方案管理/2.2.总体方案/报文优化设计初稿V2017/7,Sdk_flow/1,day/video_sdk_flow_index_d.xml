<reportIndexGroup>
<!--
//各种模式（网络和终端）
//networktype 网络类型 取值为：2G,3G,4G,wifi
//platformid 平台ID 取值为：1:安卓;2:IOS;3:其他
//流量=C5（码率）*C4（播放时长）/8之和
projectid@110#networktype@119#platformid@120#dtime@20170510#
projectid@110#networktype@120#dtime@20170510#
projectid@110#platformid@120#dtime@20170510#
projectid@110#dtime@20170510#
-->
	<macroList>
		<macro>
			<name>SDK_FLOW_DAY</name>
			<value>
			<![CDATA[
			select t.c1 projectid,networktype,platformid,t.date dtime,
				   if(t.eventname = 'content_play', 1, 2) flowtype,
				   ((c5 * c4) / 8) watchflow,
				   userid
			  from video.t_cdr_sdk_event_join_video_user t
			 where t.date > '{STARTTIME}'
			   and t.date < '{ENDTIME}'
			   and (t.eventname = 'content_play' or t.eventname = 'live_play')
			]]>
			</value>
		</macro>
		<macro>
			<name>SDK_FLOW_WEEK</name>
			<value>
			<![CDATA[
			select t1.projectid,t1.networktype,t1.platformid,t2.dtime,t1.userid,t1.flowtype
				  from (select t.c1 projectid,networktype,platformid,t.date datatime,
							   if(t.eventname = 'content_play', 1, 2) flowtype,
							   userid
						  from video.t_cdr_sdk_event_join_video_user t
						 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
										'yyyyMMdd'),'yyyy-MM-dd'),7),'yyyy-MM-dd'),'yyyyMMdd')
						   and t.date < '{ENDTIME}') t1,
					   (select t.dtime, t.weekdays,from_unixtime(unix_timestamp(t.dtime, 'yyyyMMdd'),'yyyy-MM-dd') formaltime
						  from video.t_bdi_muchtv_video_rundate t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') t2
				 where t1.datatime > from_unixtime(unix_timestamp(date_sub(t2.formaltime,t2.weekdays),'yyyy-MM-dd'),'yyyyMMdd')
				   and t1.datatime <=t2.dtime
			]]>
			</value>
		</macro>
		<macro>
			<name>SDK_FLOW_MONTH</name>
			<value>
			<![CDATA[
			select t1.projectid,t1.networktype,t1.platformid,t2.dtime,t1.userid,t1.flowtype
				  from (select t.c1 projectid,networktype,platformid,t.date datatime,
							   if(t.eventname = 'content_play', 1, 2) flowtype,
							   userid
						  from video.t_cdr_sdk_event_join_video_user t
						 where substr(t.date, 0, 6) > substr('{STARTTIME}', 0, 6)
						   and substr(t.date, 0, 6) < substr('{ENDTIME}', 0, 6)) t1,
					   (select t.dtime
						  from video.t_bdi_muchtv_video_rundate t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') t2
				 where substr(t1.datatime, 0, 6) = substr(t2.dtime, 0, 6)
				   and t1.datatime <=t2.dtime
			]]>
			</value>
		</macro>
	</macroList>
    <multiHqlReportIndexs>
	<!--
	*********************************************************************************************
	//SDK事件话单结算
	//近日指标
	*********************************************************************************************
	-->
		<!--点播流量 vodflow = 当期所有客户端上报content_play事件 -->
		<!--直播流量 livetvflow = 当期所有客户端上报 live_play 事件 -->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.dayflow.d</indexKey>
            <fieldName>vodwatchusers,vodwatchflow,livetvwatchusers,livetvwatchflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   count(distinct(tt.voduserid)) vodwatchusers,
					   sum(tt.vodwatchflow) vodwatchflow,
					   count(distinct(tt.ltvuserid)) livetvwatchusers,
					   sum(tt.ltvwatchflow) livetvwatchflow
				  from (select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_DAY})t
					union all
						select projectid,
							   'ALL' networktype,
							   if(t.platformid is null,'none',t.platformid)  platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_DAY})t
					union all
						select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   if(t.platformid is null,'none',t.platformid) platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_DAY})t
					union all
						select projectid,
							   'ALL' networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_DAY})t
					)tt
				group by projectid,networktype,platformid,dtime
                ]]>
            </hql>
        </multiHqlReportIndex>

		<!--总播放流量 = 直播+点播-->
		<!-- 平均每用户消耗点播流量 avgvodflow = vodflow 点播流量 / 点播用户数-->
		<!-- 平均每用户消耗点播流量 avglivetvflow = livetvflow 点播流量 / 点播用户数-->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.flowanalyday.d</indexKey>
            <fieldName>totalflowday,avgvodflow,avglivetvflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   (vodwatchflow + livetvwatchflow) totalflowday,
					   (vodwatchflow / vodwatchusers) avgvodflow,
					   (livetvwatchflow / livetvwatchusers) avglivetvflow
				  from (select projectid,
							   if(t.networktype is null, 'ALL', t.networktype) networktype,
							   if(t.platformid is null, 'ALL', t.platformid) platformid,
							   dtime,
							   if(t.vodwatchflow is null, 0, t.vodwatchflow) vodwatchflow,
							   if(t.vodwatchusers is null, 0, t.vodwatchusers) vodwatchusers,
							   if(t.livetvwatchusers is null, 0, t.livetvwatchusers) livetvwatchusers,
							   if(t.livetvwatchflow is null, 0, t.livetvwatchflow) livetvwatchflow
						  from video.t_video_sdk_flow_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,networktype,platformid,dtime,
						  (vodwatchflow + livetvwatchflow),
						  (vodwatchflow / vodwatchusers),
						  (livetvwatchflow / livetvwatchusers)
                ]]>
            </hql>
        </multiHqlReportIndex>
		<!--
		流量占比：按网络类型、按终端类型
		结算表key形式
		projectid@110#networktype@000#dtime@20170301#
		projectid@110#platformid@111#dtime@20170301#
		-->
		<multiHqlReportIndex>
            <indexKey>video.sdk.flow.flowproportion.d</indexKey>
            <fieldName>flowprop,totalconsumeflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   (totalconsumeflow / totalflowday) flowprop,
					   totalconsumeflow
				  from (select t1.projectid,
							   'ALL' networktype,
							   t1.platformid,
							   t1.dtime,
							   t1.totalconsumeflow,
							   t2.totalflowday
						  from (select projectid,platformid,dtime,if(t.totalflowday is null, 0, t.totalflowday) totalconsumeflow
								  from video.t_video_sdk_flow_d_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}'
								   and t.networktype is null
								   and t.platformid is not null) t1,
							   (select projectid,dtime,if(t.totalflowday is null, 0, t.totalflowday) totalflowday
								  from video.t_video_sdk_flow_d_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}'
								   and t.networktype is null
								   and t.platformid is null) t2
						 where t1.projectid = t2.projectid
						   and t1.dtime = t2.dtime
					union all
						select t1.projectid,
							   t1.networktype,
							   'ALL' platformid,
							   t1.dtime,
							   t1.totalconsumeflow,
							   t2.totalflowday
						  from (select projectid,networktype,dtime,if(t.totalflowday is null, 0, t.totalflowday) totalconsumeflow
								  from video.t_video_client_flow_day_analy_d_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}'
								   and t.platformid is null
								   and t.networktype is not null) t1,
							   (select projectid,dtime,if(t.totalflowday is null, 0, t.totalflowday) totalflowday
								  from video.t_video_client_flow_day_analy_d_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}'
								   and t.platformid is null
								   and t.networktype is null) t2
						 where t1.projectid = t2.projectid
						   and t1.dtime = t2.dtime
						) tt
				 group by projectid, networktype, platformid, dtime, (totalconsumeflow / totalflowday),totalconsumeflow
                ]]>
            </hql>
        </multiHqlReportIndex>
		
	<!--
	*********************************************************************************************
	//SDK事件话单结算
	//当周指标
	*********************************************************************************************
	-->
		<!--点播流量 vodflow = 当期所有客户端上报content_play事件 -->
		<!--直播流量 livetvflow = 当期所有客户端上报 live_play 事件 -->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.dayflow.dw</indexKey>
            <fieldName>wvodwatchusers,wvodwatchflow,wlivetvwatchusers,wlivetvwatchflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   count(distinct(tt.voduserid)) wvodwatchusers,
					   sum(tt.vodwatchflow) wvodwatchflow
					   count(distinct(tt.ltvuserid)) wlivetvwatchusers,
					   sum(tt.ltvwatchflow) wlivetvwatchflow
				  from (select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_WEEK})t
					union all
						select projectid,
							   'ALL' networktype,
							   if(t.platformid is null,'none',t.platformid)  platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_WEEK})t
					union all
						select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   if(t.platformid is null,'none',t.platformid) platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_WEEK})t
					union all
						select projectid,
							   'ALL' networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_WEEK})t
					)tt
				group by projectid,networktype,platformid,dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--总播放流量 = 直播+点播-->
		<!-- 平均每用户消耗点播流量 avgvodflow = vodflow 点播流量 / 点播用户数-->
		<!-- 平均每用户消耗点播流量 avglivetvflow = livetvflow 点播流量 / 点播用户数-->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.flowanalyday.dw</indexKey>
            <fieldName>wtotalflowday,wavgvodflow,wavglivetvflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   (wvodwatchflow + wlivetvwatchflow) wtotalflowday,
					   (wvodwatchflow / wvodwatchusers) wavgvodflow,
					   (wlivetvwatchflow / wlivetvwatchusers) wavglivetvflow
				  from (select projectid,
							   if(t.networktype is null, 'ALL', t.networktype) networktype,
							   if(t.platformid is null, 'ALL', t.platformid) platformid,
							   dtime,
							   if(t.wvodwatchflow is null, 0, t.wvodwatchflow) wvodwatchflow,
							   if(t.wvodwatchusers is null, 0, t.wvodwatchusers) wvodwatchusers,
							   if(t.wlivetvwatchusers is null, 0, t.wlivetvwatchusers) wlivetvwatchusers,
							   if(t.wlivetvwatchflow is null, 0, t.wlivetvwatchflow) wlivetvwatchflow
						  from video.t_video_sdk_flow_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,networktype,platformid,dtime,
						  (wvodwatchflow + wlivetvwatchflow),
						  (wvodwatchflow / wvodwatchusers),
						  (wlivetvwatchflow / wlivetvwatchusers)
                ]]>
            </hql>
        </multiHqlReportIndex>

	<!--
	*********************************************************************************************
	//SDK事件话单结算
	//当月指标
	*********************************************************************************************
	-->
		<!--点播流量 vodflow = 当期所有客户端上报content_play事件 -->
		<!--直播流量 livetvflow = 当期所有客户端上报 live_play 事件 -->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.dayflow.dm</indexKey>
            <fieldName>mvodwatchusers,mvodwatchflow,mlivetvwatchusers,mlivetvwatchflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   count(distinct(tt.userid)) mvodwatchusers,
					   sum(tt.vodwatchflow) mvodwatchflow
					   count(distinct(tt.ltvuserid)) mlivetvwatchusers,
					   sum(tt.ltvwatchflow) mlivetvwatchflow
				  from (select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_MONTH})t
					union all
						select projectid,
							   'ALL' networktype,
							   if(t.platformid is null,'none',t.platformid)  platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_MONTH})t
					union all
						select projectid,
							   if(t.networktype is null,'none',t.networktype) networktype,
							   if(t.platformid is null,'none',t.platformid) platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_MONTH})t
					union all
						select projectid,
							   'ALL' networktype,
							   'ALL' platformid,
							   dtime,
							   if(t.flowtype=1,t.userid,null) voduserid,
							   if(t.flowtype=1,t.watchflow,0) vodwatchflow,
							   if(t.flowtype=2,t.userid,null) ltvuserid,
							   if(t.flowtype=2,t.watchflow,0) ltvwatchflow
						  from ({SDK_FLOW_MONTH})t
					)tt
				group by projectid,networktype,platformid,dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--总播放流量 = 直播+点播-->
		<!-- 平均每用户消耗点播流量 avgvodflow = vodflow 点播流量 / 点播用户数-->
		<!-- 平均每用户消耗点播流量 avglivetvflow = livetvflow 点播流量 / 点播用户数-->
        <multiHqlReportIndex>
            <indexKey>video.sdk.flow.flowanalyday.dm</indexKey>
            <fieldName>mtotalflowday,mavgvodflow,mavglivetvflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   (mvodwatchflow + mlivetvwatchflow) mtotalflowday,
					   (mvodwatchflow / mvodwatchusers) mavgvodflow,
					   (mlivetvwatchflow / mlivetvwatchusers) mavglivetvflow
				  from (select projectid,
							   if(t.networktype is null, 'ALL', t.networktype) networktype,
							   if(t.platformid is null, 'ALL', t.platformid) platformid,
							   dtime,
							   if(t.mvodwatchflow is null, 0, t.mvodwatchflow) mvodwatchflow,
							   if(t.mvodwatchusers is null, 0, t.mvodwatchusers) mvodwatchusers,
							   if(t.mlivetvwatchusers is null, 0, t.mlivetvwatchusers) mlivetvwatchusers,
							   if(t.mlivetvwatchflow is null, 0, t.mlivetvwatchflow) mlivetvwatchflow
						  from video.t_video_sdk_flow_d_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,networktype,platformid,dtime,
						  (mvodwatchflow + mlivetvwatchflow),
						  (mvodwatchflow / mvodwatchusers),
						  (mlivetvwatchflow / mlivetvwatchusers)
                ]]>
            </hql>
        </multiHqlReportIndex>
		
    </multiHqlReportIndexs>
</reportIndexGroup>
