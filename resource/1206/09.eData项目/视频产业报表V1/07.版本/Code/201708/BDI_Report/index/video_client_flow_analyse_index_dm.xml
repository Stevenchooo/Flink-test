<reportIndexGroup>
    <multiHqlReportIndexs>
<!--
//每日各种模式(网络和终端)
//networktype 网络类型 取值为：2G,3G,4G,wifi
//platformid 平台ID 取值为：1:安卓;2:IOS;3:其他
//
//根据 网络类型筛选 （ platformid ='ALL'）;根据 终端类型 （networktype ='ALL'）
//
//[20170306@SE]变动确认：（当月当年指标中）用户不需要进行去重，直接累加
-->		
		<!--点播流量 vodflow-->
		<!--直播流量 livetvflow-->
		<!--点播用户 vodwatchusers-->
		<!--直播用户 livetvwatchusers-->
        <multiHqlReportIndex>
            <indexKey>video.client.flow.analyse.columns.dm</indexKey>
            <fieldName>vodflow,livetvflow,vodwatchusers,livetvwatchusers</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   sum(vodflow) vodflow,
					   sum(livetvflow) livetvflow,
					   sum(vodwatchusers) vodwatchusers,
					   sum(livetvwatchusers) livetvwatchusers
				  from (select t1.projectid,
							   if(t1.networktype is null, 'ALL', t1.networktype) networktype,
							   if(t1.platformid is null, 'ALL', t1.platformid) platformid,
							   t2.dtime,
							   if(t1.vodwatchflow is null, 0, t1.vodwatchflow) vodflow,
							   if(t1.livetvwatchflow is null, 0, t1.livetvwatchflow) livetvflow,
							   if(t1.vodwatchusers is null, 0, t1.vodwatchusers) vodwatchusers,
							   if(t1.livetvwatchusers is null, 0, t1.livetvwatchusers) livetvwatchusers
						  from (select *
								  from video.t_video_client_flow_day_analy_d_hbase t
								 where substr(t.dtime, 0, 6) >= substr('{STARTTIME}', 0, 6)
								   and substr(t.dtime, 0, 6) <= substr('{ENDTIME}', 0, 6)) t1,
							   (select t.dtime
								  from video.t_bdi_muchtv_video_rundate t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}') t2
						 where substr(t1.dtime, 0, 6) = substr(t2.dtime, 0, 6)
						   and t1.dtime <= t2.dtime) tt
				 group by projectid, networktype, platformid, dtime
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--总播放流量 totalflow-->
		<!-- 平均每用户消耗点播流量 avgvodflow = vodflow 点播流量 / 点播用户数-->
		<!-- 平均每用户消耗点播流量 avglivetvflow = livetvflow 点播流量 / 点播用户数-->
		<multiHqlReportIndex>
            <indexKey>video.client.flow.analyse.flowavg.dm</indexKey>
            <fieldName>totalflow,avgvodflow,avglivetvflow</fieldName>
            <hql>
                <![CDATA[
				select projectid,networktype,platformid,dtime,
					   (vodflow + livetvflow) totalflow,
					   (vodflow / vodwatchusers) avgvodflow,
					   (livetvflow / livetvwatchusers) avglivetvflow
				  from (select projectid,
							   if(t.networktype is null, 'ALL', t.networktype) networktype,
							   if(t.platformid is null, 'ALL', t.platformid) platformid,
							   dtime,
							   vodflow,
							   livetvflow,
							   vodwatchusers,
							   livetvwatchusers
						  from video.t_video_client_flow_analyse_dm_hbase t
						 where t.dtime > '{STARTTIME}'
						   and t.dtime < '{ENDTIME}') tt
				 group by projectid,networktype,platformid,dtime,
						  (vodflow + livetvflow),
						  (vodflow / vodwatchusers),
						  (livetvflow / livetvwatchusers)
                ]]>
            </hql>
        </multiHqlReportIndex>
		
		<!--活跃用户DOU	douflow = 总播放流量 totalflow/活跃用户数 -->
		<!-- 201707 活跃用户数从t_video_develop_user_active_td_hbase修改从中间表t_mid_video_sdk_current_dm，取platformid为all的数据 -->
		<multiHqlReportIndex>
            <indexKey>video.client.flow.analyse.douflow.dm</indexKey>
            <fieldName>douflow</fieldName>
            <hql>
                <![CDATA[
				select projectid, networktype, platformid, dtime, (totalflow / activeusers) douflow
				  from (select t1.projectid,t1.networktype,t1.platformid,t1.dtime,t1.totalflow,
							   t2.activeusers
						  from (select projectid, networktype, platformid, dtime, totalflow
								  from video.t_video_client_flow_analyse_dm_hbase t
								 where t.dtime > '{STARTTIME}'
								   and t.dtime < '{ENDTIME}') t1
						  left join (select projectid,dtime,if(activeusers is null, 0, activeusers) activeusers
									  from video.t_mid_video_sdk_current_dm t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									   and t.activitychannelid = 'ALL'
									   and t.platformid = 'ALL'
									   and t.activityid = 'ALL') t2
							on t1.projectid = t2.projectid
						   and t1.dtime = t2.dtime
					) tt
				 group by projectid, networktype, platformid, dtime, (totalflow / activeusers)
                ]]>
            </hql>
        </multiHqlReportIndex>
		
    </multiHqlReportIndexs>
</reportIndexGroup>
