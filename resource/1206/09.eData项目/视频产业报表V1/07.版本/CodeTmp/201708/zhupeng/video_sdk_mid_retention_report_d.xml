<reportSuite>
    <reports>
        <report tableName = "t_video_sdk_current_d"
				keyFields = "projectid,activitychannelid,platformid,dtime" 
				period = "daily" timeFormat = "yyyyMMdd" timeField = "dtime">
            <fieldDefinition>
                <field name="projectid" regular="[0-9a-zA-Z./-]*"/>
				<field name="activitychannelid" regular="[0-9a-zA-Z./-]*"/>
				<field name="platformid" regular="[0-9a-zA-Z./-]*"/>
                <field name="dtime"  regular="[0-9a-zA-Z./-]*"/>
            </fieldDefinition>
			<materialViewers>
				<materialViewer tableName = "video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS" clear="false" partition="id,date">
				<!--
			******************************************************************************************
			//物化视图
			//新增非游客转化的注册用户数 newregisterusers
			//	新增注册用户数需要扣除由新增游客转化过来的用户，
			//	其中具体计算根据注册话单中的DID如果找到之前（30天内）有游客登录话单则不算新增注册用户。
			//若在浏览器中一键注册后，又进行注销操作，
			
			修改：重新创建T_MID_DAY_NOTCONVERT_REGISTEREDUSERS表，获取新增注册和新增游客去重的数据
			
			drop table video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS;
			create table video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS
			(
			projectid          string,
			platformid         string,
			activitychannelid  string,
			activityid         string,
			dtime              string,
			identityid         string
			)
			partitioned by(
			id string,
			date string
			)
			row format delimited fields terminated by '\t' map keys terminated by '&' stored as textfile;
			grant select,delete,insert on T_MID_DAY_NOTCONVERT_REGISTEREDUSERS to user mapred;
			******************************************************************************************
			-->
					<hql>
					<![CDATA[
			select distinct projectid,platformid,activitychannelid,activityid,dtime,identityid,projectid id,dtime date
			  from (
					select projectid,
					       'none' platformid,
					       if(activitychannelid is null,'none',activitychannelid) activitychannelid,
						   if(activityid is null,'none',activityid) activityid,
						   identityid,
						   date dtime
					  from video.t_cdr_top_user_info t
					 where t.date > '{STARTTIME}'
					   and t.date < '{ENDTIME}'
					   and t.actiontype = 1		
                     union all
                    select projectid,
					       if(platformid is null,'none',platformid) platformid,
						   'none' activitychannelid,
						   'none' activityid,
						   userid identityid,
						   date dtime
                      from video.t_mid_day_newlogin_visitor t
                     where t.date > '{STARTTIME}'
					   and t.date < '{ENDTIME}'	
                     )tt					   
					]]>
					</hql>
				</materialViewer>
				<!-- newsubscriber-->
				<materialViewer tableName = "video.t_mid_newsubscriber_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				    select projectid,
					       if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid ) newsubscriber,
						   projectid id,dtime date
					  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS 
					 group by projectid,activitychannelid,activityid,platformid,dtime
				  grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   )
					]]>
					</hql>
				</materialViewer>
				<!--day01againloginregister-->
				<materialViewer tableName = "video.t_mid_day01againloginregister_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				    select projectid,
					       if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid) day01againloginregister,
						   projectid id,dtime date
				     from (
						select t1.projectid projectid,
							   t1.activitychannelid ,
							   t1.activityid,
							   t1.platformid,
							   t1.dtime dtime,
							   t1.identityid identityid
						  from (select projectid,activitychannelid,activityid,platformid,t.date dtime,identityid
								  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS t
								 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),1),'yyyy-MM-dd'),'yyyyMMdd')
								   and t.date < from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{ENDTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),1),'yyyy-MM-dd'),'yyyyMMdd')
							) t1
						  join (select distinct projectid,t.date dtime,userid
									  from video.t_cdr_sdk_event_join_video_user t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									) t2
							on t1.identityid = t2.userid
						   and t1.projectid = t2.projectid
						   and t1.dtime = from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp(t2.dtime,
											'yyyyMMdd'),'yyyy-MM-dd'),1),'yyyy-MM-dd'),'yyyyMMdd')
						  ) tt
						 group by projectid,activitychannelid,activityid,platformid,dtime
				      grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   ) 
					]]>
					</hql>
				</materialViewer>
				<!--day03againloginregister-->
				<materialViewer tableName = "video.t_mid_day03againloginregister_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				    select projectid,
					       if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid) day03againloginregister,
						   projectid id,dtime date
				     from (
						select t1.projectid projectid,
							   t1.activitychannelid ,
							   t1.activityid,
							   t1.platformid,
							   t1.dtime dtime,
							   t1.identityid identityid
						  from (select projectid,activitychannelid,activityid,platformid,t.date dtime,identityid
								  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS t
								 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),3),'yyyy-MM-dd'),'yyyyMMdd')
								   and t.date < from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{ENDTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),3),'yyyy-MM-dd'),'yyyyMMdd')
							) t1
						  join (select distinct projectid,t.date dtime,userid
									  from video.t_cdr_sdk_event_join_video_user t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									) t2
							on t1.identityid = t2.userid
						   and t1.projectid = t2.projectid
						   and t1.dtime = from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp(t2.dtime,
											'yyyyMMdd'),'yyyy-MM-dd'),3),'yyyy-MM-dd'),'yyyyMMdd')
											
						  ) tt
						 group by projectid,activitychannelid,activityid,platformid,dtime
				      grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   )  
					]]>
					</hql>
				</materialViewer>
			    <!--day07againloginregister-->
				<materialViewer tableName = "video.t_mid_day07againloginregister_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				    select projectid,
					       if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid) day07againloginregister,
						   projectid id,dtime date
				     from (
						select t1.projectid projectid,
							   t1.activitychannelid ,
							   t1.activityid,
							   t1.platformid,
							   t1.dtime dtime,
							   t1.identityid identityid
						  from (select projectid,activitychannelid,activityid,platformid,t.date dtime,identityid
								  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS t
								 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),7),'yyyy-MM-dd'),'yyyyMMdd')
								   and t.date < from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{ENDTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),7),'yyyy-MM-dd'),'yyyyMMdd')
							) t1
						  join (select distinct projectid,t.date dtime,userid
									  from video.t_cdr_sdk_event_join_video_user t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									) t2
							on t1.identityid = t2.userid
						   and t1.projectid = t2.projectid
						   and t1.dtime = from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp(t2.dtime,
											'yyyyMMdd'),'yyyy-MM-dd'),7),'yyyy-MM-dd'),'yyyyMMdd')
											
						  ) tt
						 group by projectid,activitychannelid,activityid,platformid,dtime
				      grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   ) 
					]]>
					</hql>
				</materialViewer>
				<!--day15againloginregister-->
				<materialViewer tableName = "video.t_mid_day15againloginregister_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				   select projectid,
				           if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid) day15againloginregister,
						   projectid id,dtime date
				     from (
						select t1.projectid projectid,
							   t1.activitychannelid ,
							   t1.activityid,
							   t1.platformid,
							   t1.dtime dtime,
							   t1.identityid identityid
						  from (select projectid,activitychannelid,activityid,platformid,t.date dtime,identityid
								  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS t
								 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),15),'yyyy-MM-dd'),'yyyyMMdd')
								   and t.date < from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{ENDTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),15),'yyyy-MM-dd'),'yyyyMMdd')
							) t1
						  join (select distinct projectid,t.date dtime,userid
									  from video.t_cdr_sdk_event_join_video_user t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									) t2
							on t1.identityid = t2.userid
						   and t1.projectid = t2.projectid
						   and t1.dtime = from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp(t2.dtime,
											'yyyyMMdd'),'yyyy-MM-dd'),15),'yyyy-MM-dd'),'yyyyMMdd')
											
						  ) tt
						 group by projectid,activitychannelid,activityid,platformid,dtime
				      grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   ) 
					]]>
					</hql>
				</materialViewer>
				<!--day30againloginregister-->
				<materialViewer tableName = "video.t_mid_day30againloginregister_tmp" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				    select projectid,
				           if(platformid is null,'ALL',platformid) platformid,
					       if(activitychannelid is null,'ALL',activitychannelid) activitychannelid,
						   if(activityid is null,'ALL',activityid) activityid,
						   dtime,
						   count(distinct identityid) day30againloginregister,
						   projectid id,dtime date
				     from (
						select t1.projectid projectid,
							   t1.activitychannelid ,
							   t1.activityid,
							   t1.platformid,
							   t1.dtime dtime,
							   t1.identityid identityid
						  from (select projectid,activitychannelid,activityid,platformid,t.date dtime,identityid
								  from video.T_MID_DAY_NOTCONVERT_REGISTEREDUSERS t
								 where t.date > from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{STARTTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),30),'yyyy-MM-dd'),'yyyyMMdd')
								   and t.date < from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp('{ENDTIME}',
												'yyyyMMdd'),'yyyy-MM-dd'),30),'yyyy-MM-dd'),'yyyyMMdd')
							) t1
						  join (select distinct projectid,t.date dtime,userid
									  from video.t_cdr_sdk_event_join_video_user t
									 where t.date > '{STARTTIME}'
									   and t.date < '{ENDTIME}'
									) t2
							on t1.identityid = t2.userid
						   and t1.projectid = t2.projectid
						   and t1.dtime = from_unixtime(unix_timestamp(date_sub(from_unixtime(unix_timestamp(t2.dtime,
											'yyyyMMdd'),'yyyy-MM-dd'),30),'yyyy-MM-dd'),'yyyyMMdd')
											
						  ) tt
						 group by projectid,activitychannelid,activityid,platformid,dtime
				      grouping sets
				       (
					     (projectid,activitychannelid,activityid,platformid,dtime),
						 (projectid,activityid,platformid,dtime),
						 (projectid,activitychannelid,platformid,dtime),
						 (projectid,activitychannelid,activityid,dtime),
						 (projectid,activitychannelid,dtime),
						 (projectid,activityid,dtime),
						 (projectid,platformid,dtime),
						 (projectid,dtime)
					   ) 
					]]>
					</hql>
				</materialViewer>
				<!--retentionrate-->
				<materialViewer tableName = "video.t_mid_video_sdk_retentionrate_d" clear="false" partition="id,date">
					<hql>
					<![CDATA[
				      select projectid,platformid,activitychannelid,activityid,dtime,
					         newsubscriber,
							 if(newsubscriber=0,0,(day01againloginregister)/newsubscriber) day01retentionrate,
							 if(newsubscriber=0,0,(day03againloginregister)/newsubscriber) day03retentionrate,
							 if(newsubscriber=0,0,(day07againloginregister)/newsubscriber) day07retentionrate,
							 if(newsubscriber=0,0,(day15againloginregister)/newsubscriber) day15retentionrate,
							 if(newsubscriber=0,0,(day30againloginregister)/newsubscriber) day30retentionrate,
							 projectid id,dtime date
					    from (
						 select distinct projectid,activitychannelid,activityid,platformid,dtime,newsubscriber,day01againloginregister,day03againloginregister,
						        day07againloginregister,day15againloginregister,day30againloginregister
							from (
							 select projectid,activitychannelid,activityid,platformid,dtime,
									sum(newsubscriber) over(partition by projectid,activitychannelid,activityid,dtime) newsubscriber,
									sum(day01againloginregister) over(partition by projectid,activitychannelid,activityid,platformid,dtime) day01againloginregister,
									sum(day03againloginregister) over(partition by projectid,activitychannelid,activityid,platformid,dtime) day03againloginregister,
									sum(day07againloginregister) over(partition by projectid,activitychannelid,activityid,platformid,dtime) day07againloginregister,
									sum(day15againloginregister) over(partition by projectid,activitychannelid,activityid,platformid,dtime) day15againloginregister,
									sum(day30againloginregister) over(partition by projectid,activitychannelid,activityid,platformid,dtime) day30againloginregister
							   from (
								select projectid,activitychannelid,activityid,platformid,dtime,
									   if(newsubscriber is null,0,newsubscriber) newsubscriber ,0 newvisitor,
									   0 day01againloginregister,0 day03againloginregister,0 day07againloginregister,0 day15againloginregister,0 day30againloginregister
								  from video.t_mid_newsubscriber_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								   and platformid='ALL'
								   
								 union all
								select projectid,activitychannelid,activityid,platformid,dtime,
									   0 novisitorconvert,0 newvisitor,
									   if(day01againloginregister is null,0,day01againloginregister) day01againloginregister,0 day03againloginregister,0 day07againloginregister,0 day15againloginregister,0 day30againloginregister
								  from video.t_mid_day01againloginregister_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								 union all
								select projectid,activitychannelid,activityid,platformid,dtime,
									   0 novisitorconvert,0 newvisitor,
									   0 day01againloginregister,if(day03againloginregister is null,0,day03againloginregister) day03againloginregister,0 day07againloginregister,0 day15againloginregister,0 day30againloginregister
								  from video.t_mid_day03againloginregister_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								 union all
								select projectid,activitychannelid,activityid,platformid,dtime,
									   0 novisitorconvert,0 newvisitor,
									   0 day01againloginregister,0 day03againloginregister,if(day07againloginregister is null,0,day07againloginregister) day07againloginregister,0 day15againloginregister,0 day30againloginregister
								  from video.t_mid_day07againloginregister_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								 union all
								select projectid,activitychannelid,activityid,platformid,dtime,
									   0 novisitorconvert,0 newvisitor,
									   0 day01againloginregister,0 day03againloginregister,0 day07againloginregister,if(day15againloginregister is null,0,day15againloginregister) day15againloginregister,0 day30againloginregister
								  from video.t_mid_day15againloginregister_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								 union all
								select projectid,activitychannelid,activityid,platformid,dtime,
									   0 novisitorconvert,0 newvisitor,
									   0 day01againloginregister,0 day03againloginregister,0 day07againloginregister,0 day15againloginregister,if(day30againloginregister is null,0,day30againloginregister) day30againloginregister
								  from video.t_mid_day30againloginregister_tmp
								 where date > '{STARTTIME}'
								   and date < '{ENDTIME}'
								  )t
								   )tt
                                    )ttt								   
					]]>
					</hql>
				</materialViewer>
			</materialViewers>
        </report>
    </reports>
</reportSuite>
